version: "3"

services:
  db:
    container_name: fractal-db
    image: postgres:15.4-alpine
    restart: always
    ports:
      - 5433:5433
    volumes:
      - ./fractal-db-data:/var/lib/postgresql/data
    command:
      -p 5433
    environment:
      POSTGRES_USER: fractal
      POSTGRES_PASSWORD: fractal
      POSTGRES_DB: fractal
      # required for the check below - otherwise postgresql
      # will use undefined 'root' user and raise errors
      PGUSER: fractal
    healthcheck:
      # postgresql starts up, stops, and then restarts
      # => errors if the server connects before the stop
      # this checks if the system is ready
      test: pg_isready -p 5433
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    container_name: fractal-server
    depends_on:
      db:
        condition: service_healthy
    image: fractal-slurm-server
    build:
      context: .
      dockerfile: server/Dockerfile.server
    hostname: fractal-server
    user: admin
    ports:
      - 6817:6817
      - 6818:6818
      - 8000:8000
    volumes:
      - ./fractal-share/:/home/fractal-share/
      - ./fractal-slurm-data:/home/admin
    environment:
      - SLURM_CPUS_ON_NODE=1
    healthcheck:
      # check if server is up from within the container
      # (hence the localhost)
      test: curl --fail http://localhost:8000/api/alive/ || exit 1
      interval: 5s
      timeout: 2s
      retries: 5

  client:
    container_name: fractal-client
    depends_on:
      server:
        condition: service_healthy
    image: fractal-client
    build:
      context: .
      dockerfile: client/Dockerfile.client
    ports:
      - 5173:5173

  slurm-node:
    container_name: fractal-slurm-node
    depends_on:
      - server
    image: fractal-slurm-node
    build:
      context: .
      dockerfile: slurm/Dockerfile.node
    hostname: fractal-slurm-node
    user: admin
    volumes:
      - ./fractal-slurm-data:/home/admin
    environment:
      - SLURM_NODENAME=slurm-node-1
      - SLURM_CPUS_ON_NODE=1
